name: Build and Extract JSON

on:
  workflow_dispatch:

jobs:
  build_slicers:
    strategy:
      fail-fast: false
      matrix:
        slicer: 
          - OrcaSlicer
          - PrusaSlicer
          - BambuStudio
        include:
          - slicer: OrcaSlicer
            repo: https://github.com/SoftFever/OrcaSlicer
          - slicer: PrusaSlicer
            repo: https://github.com/prusa3d/PrusaSlicer
          - slicer: BambuStudio
            repo: https://github.com/BambuLab/BambuStudio

    runs-on: large-ubuntu-24.04-x16

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup
        run: |
          sudo apt update
          sudo apt install -y xvfb

          # Setup slicer for build
          mkdir -p slicer-out
          git clone ${{ matrix.repo }} slicer-src
          pushd slicer-src
          git apply ../dump_slicer_steps/${{ matrix.slicer }}/dump_configs.patch
          popd

      - name: Install dependencies
        run: |
          ./dump_slicer_steps/${{ matrix.slicer }}/install-deps.sh

      - name: Cache built dependencies
        id: cache-build-deps
        uses: actions/cache@v4
        with:
          path: slicer-src/deps/build
          key: ${{ runner.os }}-${{ matrix.slicer }}-build-deps-${{ hashFiles('slicer-src/deps/**/*', 'dump_slicer_steps/${{ matrix.slicer }}/build-deps.sh') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.slicer }}-build-deps-

      - name: Build dependencies
        if: steps.cache-build-deps.outputs.cache-hit != 'true'
        run: |
          ./dump_slicer_steps/${{ matrix.slicer }}/build-deps.sh

      - name: Cache final build
        id: cache-build
        uses: actions/cache@v4
        with:
          path: slicer-src/build
          key: ${{ runner.os }}-${{ matrix.slicer }}-build-${{ hashFiles('slicer-src/src/**/*', 'dump_slicer_steps/${{ matrix.slicer }}/build.sh') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.slicer }}-build-

      - name: Build slicer
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          ./dump_slicer_steps/${{ matrix.slicer }}/build.sh

      - name: Run slicer
        run: |
          ./dump_slicer_steps/${{ matrix.slicer }}/run.sh

      - name: Upload extracted JSON files
        uses: actions/upload-artifact@v4
        with:
          name: configs-${{ matrix.slicer }}
          path: slicer-out/*.json
