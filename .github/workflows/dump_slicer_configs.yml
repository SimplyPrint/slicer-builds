name: Build and Extract JSON

on:
  schedule:
    - cron: "0 22 * * *"
  workflow_dispatch:

jobs:
  build_slicers:
    strategy:
      fail-fast: false
      matrix:
        slicer:
          - OrcaSlicer
          - PrusaSlicer
          - BambuStudio
          - ElegooSlicer
          - QIDISlicer
        include:
          - slicer: OrcaSlicer
            repo: https://github.com/SoftFever/OrcaSlicer
            ref: tags/v2.3.0
          - slicer: PrusaSlicer
            repo: https://github.com/prusa3d/PrusaSlicer
            ref: tags/version_2.9.2
          - slicer: BambuStudio
            repo: https://github.com/BambuLab/BambuStudio
            ref: tags/v02.01.01.52
          - slicer: ElegooSlicer
            repo: https://github.com/ELEGOO-3D/ElegooSlicer
            ref: tags/v1.1.8.2
          - slicer: QIDISlicer
            repo: https://github.com/QIDITECH/QIDISlicer
            ref: tags/V1.2.4

    runs-on: ubuntu-22.04
    env:
      DEPS_CACHE_KEY: ""
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

          # Setup slicer for build
          mkdir -p slicer-out
          git clone ${{ matrix.repo }} slicer-src --depth 1 --
          pushd slicer-src
          git fetch --tags
          git fetch origin ${{ matrix.ref }}
          git checkout ${{ matrix.ref }}
          git apply ../dump_slicer_steps/${{ matrix.slicer }}/dump_configs.patch --reject --whitespace=fix
          popd

      - name: Install dependencies
        run: |
          ./dump_slicer_steps/${{ matrix.slicer }}/install-deps.sh

      - name: Get dependencies cache key
        run: |
          cd slicer-src
          echo "DEPS_CACHE_KEY=$(git log -1 --pretty="format:%H" -- deps)" >> $GITHUB_ENV

      - name: Cache built dependencies
        id: cache-build-deps
        uses: actions/cache@v4
        with:
          path: slicer-src/deps/build
          key: ${{ runner.os }}-${{ matrix.slicer }}-build-deps-${{ env.DEPS_CACHE_KEY }}-${{ hashFiles('dump_slicer_steps/${{ matrix.slicer }}/build-deps.sh') }}

      - name: Build dependencies
        if: steps.cache-build-deps.outputs.cache-hit != 'true'
        run: |
          ./dump_slicer_steps/${{ matrix.slicer }}/build-deps.sh

      - name: Cache built slicer
        id: cache-build-slicer
        uses: actions/cache@v4
        with:
          path: slicer-src/build
          key: ${{ runner.os }}-${{ matrix.slicer }}-build-deps-${{ hashFiles('slicer-src/src/libslic3r/PrintConfig.cpp', 'slicer-src/src/slic3r/GUI/Tab.cpp', 'dump_slicer_steps/${{ matrix.slicer }}/dump_configs.patch') }}

      - name: Build slicer
        if: steps.cache-build-slicer.outputs.cache-hit != 'true'
        run: |
          ./dump_slicer_steps/${{ matrix.slicer }}/build.sh

      - name: Run slicer
        run: |
          ./dump_slicer_steps/${{ matrix.slicer }}/run.sh

      - name: Upload extracted JSON files
        uses: actions/upload-artifact@v4
        with:
          name: configs-${{ matrix.slicer }}
          path: slicer-out/*.json


  commit_artifacts:
    needs: build_slicers
    runs-on: ubuntu-24.04
    if: success() || failure()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: slicer-config-artifacts

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: "~"

      - name: Rename artifact folders
        run: |
          for f in $(ls | grep configs-); do
            new_name="${f#configs-}"
            mkdir -p $new_name
            cp -rf $f/* $new_name || true
            rm -r $f 
          done

      - name: Commit to repo
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git commit -m "Update artifacts"; then
              git push origin
          fi
